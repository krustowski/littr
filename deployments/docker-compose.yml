name: ${PROJECT_NAME}

networks:
  traefik:
    name: ${DOCKER_NETWORK_NAME}
    external: true

volumes:
  littr-data:
    name: ${DOCKER_VOLUME_DATA_NAME}
    external: true
  littr-pix:
    name: ${DOCKER_VOLUME_PIX_NAME}
    external: true

services:
  littr-backend:
    image: ${DOCKER_IMAGE_TAG}
    hostname: ${DOCKER_CONTAINER_NAME}
    container_name: ${DOCKER_CONTAINER_NAME}
    env_file:
      - ../.env
    build:
      context: ..
      dockerfile: build/${DOCKERFILE}
      args: 
        APP_NAME: ${APP_NAME}
        APP_PEPPER: ${APP_PEPPER}
        APP_VERSION: ${APP_VERSION}
        COMMON_BUILD_LDFLAGS: ${COMMON_BUILD_LDFLAGS}
        DOCKER_BUILD_IMAGE: ${DOCKER_BUILD_IMAGE}
        DOCKER_BUILD_IMAGE_RELEASE: ${DOCKER_BUILD_IMAGE_RELEASE}
        DOCKER_INTERNAL_PORT: ${DOCKER_INTERNAL_PORT} 
        DOCKER_USER: ${DOCKER_USER}
        OARCH: ${GOARCH}
        GOCACHE: ${GOCACHE}
        GOMODCACHE: ${GOMODCACHE}
        GOLANG_VERSION: ${GOLANG_VERSION}
        TZ: ${TZ}
        VAPID_PUB_KEY: ${VAPID_PUB_KEY}
    restart: unless-stopped
    cpus: 0.5
    mem_limit: 512m
    #mem_reservation: 32m
    volumes:
      - "littr-data:/opt/data"
      - "littr-pix:/opt/pix"
    ports:
      - "${DOCKER_EXTERNAL_PORT}:${DOCKER_INTERNAL_PORT}"
    networks:
      - traefik
    logging:
      driver: loki
      options:
        loki-url: ${LOKI_URL}
        labels: ${LOKI_LABELS}
    labels:
      - "traefik.http.routers.${APP_NAME}.rule=Host(${APP_URLS_TRAEFIK})"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=${DOCKER_INTERNAL_PORT}"
      - "traefik.docker.network=${DOCKER_NETWORK_NAME}"
    environment:
      API_TOKEN: ${API_TOKEN}
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
      APP_PEPPER: ${APP_PEPPER}
      APP_URL_MAIN: ${APP_URL_MAIN}
      DATA_DUMP_FORMAT: ${DATA_DUMP_FORMAT}
      DATA_LOAD_FORMAT: ${DATA_LOAD_FORMAT}
      GOGC: ${GOGC}
      LIMITER_DISABLED: ${LIMITER_DISABLED}
      MAIL_HELO: ${MAIL_HELO}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_SASL_USR: ${MAIL_SASL_USR}
      MAIL_SASL_PWD: ${MAIL_SASL_PWD}
      REGISTRATION_ENABLED: ${REGISTRATION_ENABLED}
      RUN_AVATAR_MIGRATION: ${RUN_AVATAR_MIGRATION}
      SERVER_PORT: ${DOCKER_INTERNAL_PORT}
      TZ: ${TZ}
      VAPID_PUB_KEY: ${VAPID_PUB_KEY}
      VAPID_PRIV_KEY: ${VAPID_PRIV_KEY}
      VAPID_SUBSCRIBER: ${VAPID_SUBSCRIBER}
    healthcheck:
      test: ["CMD", "wget", "--header", "X-Dump-Token: ${API_TOKEN}", "localhost:${DOCKER_INTERNAL_PORT}/api/v1/dump", "-O", "-", "-S" ]
      interval: 5m
      timeout: 5s
      retries: 3

  littr-swagger:
    image: swaggerapi/swagger-ui
    container_name: ${DOCKER_SWAGGER_CONTAINER_NAME}
    ports: 
      - target: 8080
        published: ${DOCKER_SWAGGER_EXTERNAL_PORT}
        mode: host
        protocol: tcp
    environment: 
      BASE_URL: "/docs/"
      SWAGGER_JSON_URL: "https://${APP_URL_MAIN}/web/swagger.json"
    networks: 
      - traefik
    labels:
      - "traefik.http.routers.${APP_NAME}-swagger.rule=Host(${APP_URLS_TRAEFIK}) && PathPrefix(`/docs`)"
      - "traefik.http.services.${APP_NAME}-swagger.loadbalancer.server.port=8080"
      #- "traefik.http.middlewares.${APP_NAME}.stripprefix.prefixes=/docs"
      - "traefik.docker.network=${DOCKER_NETWORK_NAME}"

